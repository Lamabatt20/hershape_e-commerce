generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model user {
  id               Int       @id @default(autoincrement())
  username         String    @unique
  email            String    @unique
  password         String
  role             String    @default("customer")
  isVerified       Boolean   @default(true)
  customer         Customer?
}

model Customer {
  id             Int        @id @default(autoincrement())
  name           String
  address        String
  phone          String
  email          String     @unique
  userId         Int?       @unique
  city           String     @default("")
  country_region String     @default("")
  postal_code    String     @default("")
  cartItems      CartItem[]
  user           user?      @relation(fields: [userId], references: [id])
  orders         Order[]
}

model Product {
  id              Int        @id @default(autoincrement())
  name            String     
  name_ar         String     @default("")
  description     String     
  description_ar  String     @default("")
  price           Int
  images          String[]                
  available       String?
  createdAt       DateTime   @default(now())
  cartItems       CartItem[]
  orderItems      OrderItem[]
  variants        ProductVariant[]

}
model ProductVariant {
  id          Int      @id @default(autoincrement())
  product     Product  @relation(fields: [productId], references: [id])
  productId   Int
  color       String?  
  size        String   
  stock       Int      @default(0)  
  images      String[] @default([]) 
}

model Order {
  id         Int         @id @default(autoincrement())
  status     String      @default("pending")
  subtotal   Int
  shipping   Int
  createdAt  DateTime    @default(now())
  customerId Int
  customer   Customer    @relation(fields: [customerId], references: [id])
  items      OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  quantity  Int
  orderId   Int
  productId Int
  color     String?
  size      String?
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model CartItem {
  id         Int      @id @default(autoincrement())
  productId  Int
  customerId Int
  quantity   Int
  color      String?
  size       String?
  customer   Customer @relation(fields: [customerId], references: [id])
  product    Product  @relation(fields: [productId], references: [id])
}
